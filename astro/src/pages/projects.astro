---
import Layout from '../layouts/Layout.astro';
import ProjectItem from '../components/ProjectItem.astro';
import { getCollection, render } from 'astro:content';
import ContactFooter from '../components/ContactFooter.astro';
import Sidebar from '../components/Sidebar.astro';

// Get all projects from the content collection
const allProjects = await getCollection('projects');
// Sort by sortOrder and render markdown to HTML
const projects = await Promise.all(
  allProjects
    .sort((a, b) => a.data.sortOrder - b.data.sortOrder)
    .map(async (project) => {
      const rendered = await render(project);
      return {
        ...project,
        Content: rendered.Content
      };
    })
);
---

<Layout title="Projects | Murali Varma" fullWidth={true}>
  <div class="projects-layout">
    <div class="sidebar desktop-only">
      <Sidebar projects={projects} />
    </div>
    <button class="sidebar-toggle mobile-only" id="sidebar-toggle" aria-label="Show project list" onclick="document.body.classList.add('sidebar-open')">
      ☰ Projects
    </button>
    <div class="sidebar-drawer mobile-only" id="sidebar-drawer">
      <button class="sidebar-close" aria-label="Close project list" onclick="document.body.classList.remove('sidebar-open')">×</button>
      <Sidebar projects={projects} />
    </div>
    <div class="projects-main">
      <div class="page-header">
        <h1>Projects</h1>
        <p class="intro">
          Here are some of the projects I've worked on over the years. This is a curated list of projects that I've found particularly interesting or challenging.
        </p>
      </div>
      <div class="projects-list">
        {projects.map((project) => (
          <div class="project" id={project.data.title.replace(/\s+/g, '-')}> 
            <h2>{project.data.title}</h2>
            <ProjectItem 
              tags={project.data.tags}
              urlLink={project.data.urlLink}
              urlText={project.data.urlText}
            >
              <div slot="description" class="project-content">
                <project.Content />
              </div>
              {project.data.image && (
                <img 
                  slot="image" 
                  src={project.data.image} 
                  alt={`${project.data.title} screenshot`} 
                />
              )}
            </ProjectItem>
          </div>
        ))}
      </div>
    </div>
  </div>
  <script is:inline>
    // Hide drawer on link click or outside click
    document.addEventListener('DOMContentLoaded', () => {
      const drawer = document.getElementById('sidebar-drawer');
      drawer.addEventListener('click', (e) => {
        if (e.target.tagName === 'A' || e.target.classList.contains('sidebar-close')) {
          document.body.classList.remove('sidebar-open');
        }
      });
      document.addEventListener('click', (e) => {
        if (document.body.classList.contains('sidebar-open') && !drawer.contains(e.target) && e.target.id !== 'sidebar-toggle') {
          document.body.classList.remove('sidebar-open');
        }
      });
    });
  </script>
</Layout>

<ContactFooter />

<style>
  h1 {
    font-size: 2.8rem;
    margin-bottom: 1rem;
    color: var(--primary-color);
    font-weight: 800;
  }

  .page-header {
    text-align: center;
    margin: 2rem 0 4rem;
  }

  .intro {
    font-size: 1.2rem;
    margin: 1.5rem auto 0;
    max-width: 70ch;
    line-height: 1.7;
    color: var(--text-light);
  }

  .projects-layout {
    display: flex;
    align-items: flex-start;
    gap: 0;
    position: relative;
  }

  .projects-main {
    flex: 1;
    margin-left: 260px;
    max-width: 900px;
    margin-right: 0;
    margin-top: 0;
    margin-bottom: 0;
    margin-left: 260px;
    margin-right: auto;
    left: 0;
    right: 0;
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    padding-left: 0;
  }

  .projects-main > * {
    width: 100%;
  }

  .projects-list {
    display: flex;
    flex-direction: column;
    gap: 4rem;
    margin-bottom: 3rem;
  }

  .project h2 {
    margin-top: 0;
    margin-bottom: 1.5rem;
    font-size: 2rem;
    color: var(--primary-color);
    font-weight: 700;
  }

  .project-content {
    line-height: 1.7;
  }

  .sidebar-toggle {
    display: none;
    position: fixed;
    top: 1rem;
    left: 1rem;
    z-index: 201;
    background: var(--primary-color);
    color: #fff;
    border: none;
    border-radius: 6px;
    padding: 0.5rem 1rem;
    font-size: 1.1rem;
    cursor: pointer;
    box-shadow: 0 2px 8px rgba(0,0,0,0.08);
  }
  .sidebar-drawer {
    display: none;
  }
  .desktop-only {
    display: block;
  }
  .mobile-only {
    display: none;
  }
  @media (max-width: 900px) {
    .desktop-only {
      display: none !important;
    }
    .mobile-only {
      display: block !important;
    }
    .projects-layout {
      flex-direction: column;
    }
    .projects-main {
      margin-left: 0;
      padding-left: 0;
      max-width: 100vw;
    }
    .sidebar-drawer {
      display: block;
      position: fixed;
      top: 0;
      left: 0;
      width: 80vw;
      max-width: 320px;
      height: 100vh;
      background: var(--background-alt, #f8fafc);
      box-shadow: 2px 0 16px rgba(0,0,0,0.15);
      z-index: 200;
      transform: translateX(-100%);
      transition: transform 0.25s cubic-bezier(.4,0,.2,1);
      overflow-y: auto;
      padding: 2rem 1rem 2rem 1rem;
    }
    body.sidebar-open .sidebar-drawer {
      transform: translateX(0);
    }
    .sidebar-close {
      position: absolute;
      top: 1rem;
      right: 1rem;
      background: none;
      border: none;
      font-size: 2rem;
      color: var(--primary-color);
      cursor: pointer;
    }
  }
  .sidebar.desktop-only {
    position: sticky;
    top: 2rem;
    height: max-content;
    min-width: 220px;
    max-width: 260px;
    z-index: 100;
    padding: 2rem 1rem 2rem 1rem;
    overflow-y: auto;
    background: none;
    border-right: none;
    box-shadow: none;
  }
</style> 