---
// DarkModeSwitch.astro
---

<div class="theme-switch-wrapper">
  <label class="theme-switch" for="theme-select">
    <span class="sr-only">Choose theme</span>
    <select id="theme-select">
      <option value="system">System</option>
      <option value="dark">Dark</option>
      <option value="light">Light</option>
    </select>
  </label>
</div>

<script>
  // Function to set the theme and update the UI
  function setTheme(theme) {
    // Save to localStorage
    localStorage.setItem('theme', theme);
    
    // Update the select element
    const select = document.getElementById('theme-select');
    if (select) {
      select.value = theme;
    }
    
    // Apply the theme
    applyTheme(theme);
  }
  
  // Function to apply theme
  function applyTheme(theme) {
    const isDark = 
      theme === 'dark' || 
      (theme === 'system' && window.matchMedia('(prefers-color-scheme: dark)').matches);
    
    if (isDark) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  }
  
  // Setup on page load
  document.addEventListener('DOMContentLoaded', () => {
    const select = document.getElementById('theme-select');
    
    // Get saved theme or default to system
    const savedTheme = localStorage.getItem('theme') || 'system';
    
    // Initialize the select value
    if (select) {
      select.value = savedTheme;
    }
    
    // Apply the theme
    applyTheme(savedTheme);
    
    // Add event listener for changes
    select?.addEventListener('change', (e) => {
      const target = e.target as HTMLSelectElement;
      setTheme(target.value);
    });
    
    // Listen for system changes
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
      if (savedTheme === 'system') {
        applyTheme('system');
      }
    });
  });
</script>

<style>
  .theme-switch-wrapper {
    display: inline-flex;
    align-items: center;
    margin-left: 1rem;
  }
  
  .theme-switch select {
    background-color: var(--background-color);
    color: var(--text-color);
    border: 1px solid var(--border-color);
    border-radius: 4px;
    padding: 0.3rem 0.6rem;
    font-size: 0.9rem;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .theme-switch select:hover {
    border-color: var(--primary-color);
  }
  
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  
  /* Dark mode specific styles */
  .dark .theme-switch select {
    background-color: var(--dark-bg);
    color: var(--dark-text);
    border-color: var(--dark-border);
  }
</style> 